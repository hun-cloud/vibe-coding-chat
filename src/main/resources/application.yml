spring:
  application:
    name: ott-chat-service
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  
  # MongoDB Configuration
  data:
    mongodb:
      host: localhost
      port: 27017
      database: ott_chat_db
      auto-index-creation: true
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # H2 Console (for development)
  h2:
    console:
      enabled: true
      path: /h2-console

# Server Configuration
server:
  port: 8080

# Logging Configuration
logging:
  level:
    com.example.demo: DEBUG
    org.springframework.web: DEBUG
    org.springframework.data: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Chat Configuration
chat:
  message:
    retention-days: 30
    max-length: 1000
  room:
    max-participants: 100
    default-ott-rooms:
      - name: "Netflix 채팅방"
        ott-type: NETFLIX
      - name: "Disney+ 채팅방"
        ott-type: DISNEY_PLUS
      - name: "Wavve 채팅방"
        ott-type: WAVVE
      - name: "Tving 채팅방"
        ott-type: TVING
      - name: "Watcha 채팅방"
        ott-type: WATCHA

# JWT Configuration
jwt:
  secret: your-super-secret-jwt-key-that-is-at-least-256-bits-long-for-security
  access-token:
    expiration: 3600000  # 1시간 (밀리초)
  refresh-token:
    expiration: 2592000000  # 30일 (밀리초) 